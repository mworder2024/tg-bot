import { Telegraf } from 'telegraf';
import * as dotenv from 'dotenv';

// Load environment variables
dotenv.config();

async function testBot() {
  console.log('üîç Testing Enhanced Bot Connection...\n');

  // Check bot token
  const token = process.env.BOT_TOKEN;
  if (!token) {
    console.error('‚ùå BOT_TOKEN not found in .env file');
    process.exit(1);
  }

  console.log('‚úÖ BOT_TOKEN found');

  // Create bot instance
  const bot = new Telegraf(token);
  
  try {
    // Get bot info
    console.log('\nüì° Connecting to Telegram...');
    const me = await bot.telegram.getMe();
    
    console.log('\n‚úÖ Bot connected successfully!');
    console.log(`ü§ñ Bot Username: @${me.username}`);
    console.log(`üÜî Bot ID: ${me.id}`);
    console.log(`üìù Bot Name: ${me.first_name}`);
    
    // Test a simple command
    bot.command('test', (ctx) => {
      console.log(`\nüì® Received test command from user ${ctx.from?.id}`);
      ctx.reply('‚úÖ Bot is working! Enhanced features are active.');
    });
    
    // Test callback handler
    bot.on('callback_query', (ctx) => {
      console.log(`\nüîò Received callback: ${(ctx.callbackQuery as any).data}`);
      ctx.answerCbQuery('Callback received!');
    });
    
    // Log all messages for debugging
    bot.on('message', (ctx) => {
      const text = (ctx.message as any).text || '(no text)';
      console.log(`\nüí¨ Message from ${ctx.from?.id}: ${text}`);
    });
    
    console.log('\nüöÄ Starting bot...');
    console.log('üìù Available commands:');
    console.log('  /test - Test if bot is working');
    console.log('  /admin - Open admin menu (admin only)');
    console.log('  /startlottery - Start a new game');
    console.log('  /join - Join active game');
    console.log('\n‚è≥ Bot is now running. Press Ctrl+C to stop.\n');
    
    // Enable graceful stop
    process.once('SIGINT', () => bot.stop('SIGINT'));
    process.once('SIGTERM', () => bot.stop('SIGTERM'));
    
    await bot.launch();
    
  } catch (error: any) {
    console.error('\n‚ùå Failed to connect bot:');
    console.error(`   Error: ${error.message}`);
    
    if (error.message.includes('401')) {
      console.error('\n‚ö†Ô∏è  Bot token is invalid. Please check your BOT_TOKEN in .env');
    } else if (error.message.includes('ENOTFOUND')) {
      console.error('\n‚ö†Ô∏è  Network error. Check your internet connection.');
    } else if (error.message.includes('409')) {
      console.error('\n‚ö†Ô∏è  Another instance of the bot is already running.');
    }
    
    process.exit(1);
  }
}

// Run test
testBot().catch(console.error);